/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Payment;
import io.swagger.model.PaymentResponse;
import io.swagger.model.PaymentResponseDTO;
import io.swagger.model.UniquePaymentKey;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-05-16T06:10:14.366Z")

@Validated
@Api(value = "payments", description = "the payments API")
@RequestMapping(value = "/v1")
public interface PaymentsApi {

    @ApiOperation(value = "give a unique id key to realize a payment", nickname = "obtainKey", notes = "", response = UniquePaymentKey.class, tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "successful operation", response = UniquePaymentKey.class) })
    @RequestMapping(value = "/payments/askforpaymentkey",
        produces = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<UniquePaymentKey> obtainKey();


    @ApiOperation(value = "process the payment of transaction between a user and seller(s)", nickname = "processPayment", notes = "", response = PaymentResponse.class, tags={ "payment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = PaymentResponseDTO.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/payments/{payment_unique_key}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<PaymentResponseDTO> processPayment(@ApiParam(value = "The unique payment key to make action idempotent",required=true) @PathVariable("payment_unique_key") String paymentUniqueKey, @ApiParam(value = "Payment object that needs to be processed" ,required=true )  @Valid @RequestBody Payment body);

}
